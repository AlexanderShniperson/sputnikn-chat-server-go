// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.24.4
// source: contract.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthErrorType int32

const (
	AuthErrorType_AuthErrorTypeNone           AuthErrorType = 0
	AuthErrorType_AuthErrorTypeUserWrongCreds AuthErrorType = 1
)

// Enum value maps for AuthErrorType.
var (
	AuthErrorType_name = map[int32]string{
		0: "AuthErrorTypeNone",
		1: "AuthErrorTypeUserWrongCreds",
	}
	AuthErrorType_value = map[string]int32{
		"AuthErrorTypeNone":           0,
		"AuthErrorTypeUserWrongCreds": 1,
	}
)

func (x AuthErrorType) Enum() *AuthErrorType {
	p := new(AuthErrorType)
	*p = x
	return p
}

func (x AuthErrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthErrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_contract_proto_enumTypes[0].Descriptor()
}

func (AuthErrorType) Type() protoreflect.EnumType {
	return &file_contract_proto_enumTypes[0]
}

func (x AuthErrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthErrorType.Descriptor instead.
func (AuthErrorType) EnumDescriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{0}
}

type RoomMemberStatusType int32

const (
	RoomMemberStatusType_RoomMemberStatusTypeInvited RoomMemberStatusType = 0
	RoomMemberStatusType_RoomMemberStatusTypeJoined  RoomMemberStatusType = 1
	RoomMemberStatusType_RoomMemberStatusTypeLeft    RoomMemberStatusType = 2
	RoomMemberStatusType_RoomMemberStatusTypeKicked  RoomMemberStatusType = 3
	RoomMemberStatusType_RoomMemberStatusTypeBanned  RoomMemberStatusType = 4
)

// Enum value maps for RoomMemberStatusType.
var (
	RoomMemberStatusType_name = map[int32]string{
		0: "RoomMemberStatusTypeInvited",
		1: "RoomMemberStatusTypeJoined",
		2: "RoomMemberStatusTypeLeft",
		3: "RoomMemberStatusTypeKicked",
		4: "RoomMemberStatusTypeBanned",
	}
	RoomMemberStatusType_value = map[string]int32{
		"RoomMemberStatusTypeInvited": 0,
		"RoomMemberStatusTypeJoined":  1,
		"RoomMemberStatusTypeLeft":    2,
		"RoomMemberStatusTypeKicked":  3,
		"RoomMemberStatusTypeBanned":  4,
	}
)

func (x RoomMemberStatusType) Enum() *RoomMemberStatusType {
	p := new(RoomMemberStatusType)
	*p = x
	return p
}

func (x RoomMemberStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomMemberStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_contract_proto_enumTypes[1].Descriptor()
}

func (RoomMemberStatusType) Type() protoreflect.EnumType {
	return &file_contract_proto_enumTypes[1]
}

func (x RoomMemberStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomMemberStatusType.Descriptor instead.
func (RoomMemberStatusType) EnumDescriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{1}
}

type RoomEventType int32

const (
	RoomEventType_roomEventTypeAll     RoomEventType = 0
	RoomEventType_roomEventTypeMessage RoomEventType = 1
	RoomEventType_roomEventTypeSystem  RoomEventType = 2
)

// Enum value maps for RoomEventType.
var (
	RoomEventType_name = map[int32]string{
		0: "roomEventTypeAll",
		1: "roomEventTypeMessage",
		2: "roomEventTypeSystem",
	}
	RoomEventType_value = map[string]int32{
		"roomEventTypeAll":     0,
		"roomEventTypeMessage": 1,
		"roomEventTypeSystem":  2,
	}
)

func (x RoomEventType) Enum() *RoomEventType {
	p := new(RoomEventType)
	*p = x
	return p
}

func (x RoomEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_contract_proto_enumTypes[2].Descriptor()
}

func (RoomEventType) Type() protoreflect.EnumType {
	return &file_contract_proto_enumTypes[2]
}

func (x RoomEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomEventType.Descriptor instead.
func (RoomEventType) EnumDescriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{2}
}

type SinceTimeOrderType int32

const (
	SinceTimeOrderType_sinceTimeOrderTypeNewest SinceTimeOrderType = 0
	SinceTimeOrderType_sinceTimeOrderTypeOldest SinceTimeOrderType = 1
)

// Enum value maps for SinceTimeOrderType.
var (
	SinceTimeOrderType_name = map[int32]string{
		0: "sinceTimeOrderTypeNewest",
		1: "sinceTimeOrderTypeOldest",
	}
	SinceTimeOrderType_value = map[string]int32{
		"sinceTimeOrderTypeNewest": 0,
		"sinceTimeOrderTypeOldest": 1,
	}
)

func (x SinceTimeOrderType) Enum() *SinceTimeOrderType {
	p := new(SinceTimeOrderType)
	*p = x
	return p
}

func (x SinceTimeOrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SinceTimeOrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_contract_proto_enumTypes[3].Descriptor()
}

func (SinceTimeOrderType) Type() protoreflect.EnumType {
	return &file_contract_proto_enumTypes[3]
}

func (x SinceTimeOrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SinceTimeOrderType.Descriptor instead.
func (SinceTimeOrderType) EnumDescriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{3}
}

type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{0}
}

type AuthUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Login    string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *AuthUserRequest) Reset() {
	*x = AuthUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthUserRequest) ProtoMessage() {}

func (x *AuthUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthUserRequest.ProtoReflect.Descriptor instead.
func (*AuthUserRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{1}
}

func (x *AuthUserRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *AuthUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UserDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string  `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	FullName string  `protobuf:"bytes,2,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Avatar   *string `protobuf:"bytes,3,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
}

func (x *UserDetail) Reset() {
	*x = UserDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetail) ProtoMessage() {}

func (x *UserDetail) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetail.ProtoReflect.Descriptor instead.
func (*UserDetail) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{2}
}

func (x *UserDetail) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserDetail) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *UserDetail) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

type AuthUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       AuthErrorType `protobuf:"varint,1,opt,name=error,proto3,enum=ru.alexshniperson.sputnikn.api.contract.v1.AuthErrorType" json:"error,omitempty"`
	AccessToken *string       `protobuf:"bytes,2,opt,name=accessToken,proto3,oneof" json:"accessToken,omitempty"`
	Detail      *UserDetail   `protobuf:"bytes,3,opt,name=detail,proto3,oneof" json:"detail,omitempty"`
}

func (x *AuthUserResponse) Reset() {
	*x = AuthUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthUserResponse) ProtoMessage() {}

func (x *AuthUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthUserResponse.ProtoReflect.Descriptor instead.
func (*AuthUserResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{3}
}

func (x *AuthUserResponse) GetError() AuthErrorType {
	if x != nil {
		return x.Error
	}
	return AuthErrorType_AuthErrorTypeNone
}

func (x *AuthUserResponse) GetAccessToken() string {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return ""
}

func (x *AuthUserResponse) GetDetail() *UserDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type ListRoomsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomIds []string `protobuf:"bytes,1,rep,name=roomIds,proto3" json:"roomIds,omitempty"`
}

func (x *ListRoomsRequest) Reset() {
	*x = ListRoomsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoomsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoomsRequest) ProtoMessage() {}

func (x *ListRoomsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoomsRequest.ProtoReflect.Descriptor instead.
func (*ListRoomsRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{4}
}

func (x *ListRoomsRequest) GetRoomIds() []string {
	if x != nil {
		return x.RoomIds
	}
	return nil
}

type RoomMemberDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string               `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	FullName       string               `protobuf:"bytes,2,opt,name=fullName,proto3" json:"fullName,omitempty"`
	IsOnline       bool                 `protobuf:"varint,3,opt,name=isOnline,proto3" json:"isOnline,omitempty"`
	MemberStatus   RoomMemberStatusType `protobuf:"varint,4,opt,name=memberStatus,proto3,enum=ru.alexshniperson.sputnikn.api.contract.v1.RoomMemberStatusType" json:"memberStatus,omitempty"`
	Avatar         *string              `protobuf:"bytes,5,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
	LastReadMarker *int64               `protobuf:"varint,6,opt,name=lastReadMarker,proto3,oneof" json:"lastReadMarker,omitempty"`
}

func (x *RoomMemberDetail) Reset() {
	*x = RoomMemberDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomMemberDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomMemberDetail) ProtoMessage() {}

func (x *RoomMemberDetail) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomMemberDetail.ProtoReflect.Descriptor instead.
func (*RoomMemberDetail) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{5}
}

func (x *RoomMemberDetail) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RoomMemberDetail) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *RoomMemberDetail) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *RoomMemberDetail) GetMemberStatus() RoomMemberStatusType {
	if x != nil {
		return x.MemberStatus
	}
	return RoomMemberStatusType_RoomMemberStatusTypeInvited
}

func (x *RoomMemberDetail) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *RoomMemberDetail) GetLastReadMarker() int64 {
	if x != nil && x.LastReadMarker != nil {
		return *x.LastReadMarker
	}
	return 0
}

// The RoomState, it will be sent to client every time Room is changed (title, avatar, members, member read markers)
type RoomDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId                  string              `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Title                   string              `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Avatar                  *string             `protobuf:"bytes,3,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
	Members                 []*RoomMemberDetail `protobuf:"bytes,4,rep,name=members,proto3" json:"members,omitempty"`
	EventMessageUnreadCount int32               `protobuf:"varint,5,opt,name=eventMessageUnreadCount,proto3" json:"eventMessageUnreadCount,omitempty"`
	EventSystemUnreadCount  int32               `protobuf:"varint,6,opt,name=eventSystemUnreadCount,proto3" json:"eventSystemUnreadCount,omitempty"`
}

func (x *RoomDetail) Reset() {
	*x = RoomDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomDetail) ProtoMessage() {}

func (x *RoomDetail) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomDetail.ProtoReflect.Descriptor instead.
func (*RoomDetail) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{6}
}

func (x *RoomDetail) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomDetail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RoomDetail) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *RoomDetail) GetMembers() []*RoomMemberDetail {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *RoomDetail) GetEventMessageUnreadCount() int32 {
	if x != nil {
		return x.EventMessageUnreadCount
	}
	return 0
}

func (x *RoomDetail) GetEventSystemUnreadCount() int32 {
	if x != nil {
		return x.EventSystemUnreadCount
	}
	return 0
}

type ListRoomsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail []*RoomDetail `protobuf:"bytes,1,rep,name=detail,proto3" json:"detail,omitempty"`
}

func (x *ListRoomsResponse) Reset() {
	*x = ListRoomsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoomsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoomsResponse) ProtoMessage() {}

func (x *ListRoomsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoomsResponse.ProtoReflect.Descriptor instead.
func (*ListRoomsResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{7}
}

func (x *ListRoomsResponse) GetDetail() []*RoomDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type SinceTimeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SinceTimestamp int64              `protobuf:"varint,1,opt,name=sinceTimestamp,proto3" json:"sinceTimestamp,omitempty"`
	OrderType      SinceTimeOrderType `protobuf:"varint,2,opt,name=orderType,proto3,enum=ru.alexshniperson.sputnikn.api.contract.v1.SinceTimeOrderType" json:"orderType,omitempty"`
}

func (x *SinceTimeFilter) Reset() {
	*x = SinceTimeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SinceTimeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SinceTimeFilter) ProtoMessage() {}

func (x *SinceTimeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SinceTimeFilter.ProtoReflect.Descriptor instead.
func (*SinceTimeFilter) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{8}
}

func (x *SinceTimeFilter) GetSinceTimestamp() int64 {
	if x != nil {
		return x.SinceTimestamp
	}
	return 0
}

func (x *SinceTimeFilter) GetOrderType() SinceTimeOrderType {
	if x != nil {
		return x.OrderType
	}
	return SinceTimeOrderType_sinceTimeOrderTypeNewest
}

type SyncRoomFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// Mean we want to filter room events with offset of time and order direction
	SinceFilter *SinceTimeFilter `protobuf:"bytes,2,opt,name=sinceFilter,proto3,oneof" json:"sinceFilter,omitempty"`
	// Mean we want to filter room events by type
	EventFilter RoomEventType `protobuf:"varint,4,opt,name=eventFilter,proto3,enum=ru.alexshniperson.sputnikn.api.contract.v1.RoomEventType" json:"eventFilter,omitempty"`
	// Mean we want to get limited room events with conjunction of sinceFilter and eventFilter
	EventLimit int32 `protobuf:"varint,3,opt,name=eventLimit,proto3" json:"eventLimit,omitempty"`
}

func (x *SyncRoomFilter) Reset() {
	*x = SyncRoomFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRoomFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRoomFilter) ProtoMessage() {}

func (x *SyncRoomFilter) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRoomFilter.ProtoReflect.Descriptor instead.
func (*SyncRoomFilter) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{9}
}

func (x *SyncRoomFilter) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *SyncRoomFilter) GetSinceFilter() *SinceTimeFilter {
	if x != nil {
		return x.SinceFilter
	}
	return nil
}

func (x *SyncRoomFilter) GetEventFilter() RoomEventType {
	if x != nil {
		return x.EventFilter
	}
	return RoomEventType_roomEventTypeAll
}

func (x *SyncRoomFilter) GetEventLimit() int32 {
	if x != nil {
		return x.EventLimit
	}
	return 0
}

type SyncRoomsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomFilter []*SyncRoomFilter `protobuf:"bytes,1,rep,name=roomFilter,proto3" json:"roomFilter,omitempty"`
}

func (x *SyncRoomsRequest) Reset() {
	*x = SyncRoomsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRoomsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRoomsRequest) ProtoMessage() {}

func (x *SyncRoomsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRoomsRequest.ProtoReflect.Descriptor instead.
func (*SyncRoomsRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{10}
}

func (x *SyncRoomsRequest) GetRoomFilter() []*SyncRoomFilter {
	if x != nil {
		return x.RoomFilter
	}
	return nil
}

type ChatAttachmentDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId      string `protobuf:"bytes,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	AttachmentId string `protobuf:"bytes,2,opt,name=attachmentId,proto3" json:"attachmentId,omitempty"`
	MimeType     string `protobuf:"bytes,3,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
}

func (x *ChatAttachmentDetail) Reset() {
	*x = ChatAttachmentDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatAttachmentDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatAttachmentDetail) ProtoMessage() {}

func (x *ChatAttachmentDetail) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatAttachmentDetail.ProtoReflect.Descriptor instead.
func (*ChatAttachmentDetail) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{11}
}

func (x *ChatAttachmentDetail) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *ChatAttachmentDetail) GetAttachmentId() string {
	if x != nil {
		return x.AttachmentId
	}
	return ""
}

func (x *ChatAttachmentDetail) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

type RoomEventReactionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId   string `protobuf:"bytes,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	RoomId    string `protobuf:"bytes,2,opt,name=roomId,proto3" json:"roomId,omitempty"`
	SenderId  string `protobuf:"bytes,3,opt,name=senderId,proto3" json:"senderId,omitempty"`
	Content   string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Timestamp int64  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *RoomEventReactionDetail) Reset() {
	*x = RoomEventReactionDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomEventReactionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomEventReactionDetail) ProtoMessage() {}

func (x *RoomEventReactionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomEventReactionDetail.ProtoReflect.Descriptor instead.
func (*RoomEventReactionDetail) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{12}
}

func (x *RoomEventReactionDetail) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *RoomEventReactionDetail) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomEventReactionDetail) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *RoomEventReactionDetail) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RoomEventReactionDetail) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type RoomEventMessageDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId         string                     `protobuf:"bytes,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	RoomId          string                     `protobuf:"bytes,2,opt,name=roomId,proto3" json:"roomId,omitempty"`
	SenderId        string                     `protobuf:"bytes,3,opt,name=senderId,proto3" json:"senderId,omitempty"`
	ClientEventId   *int32                     `protobuf:"varint,4,opt,name=clientEventId,proto3,oneof" json:"clientEventId,omitempty"`
	Version         int32                      `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	Attachment      []*ChatAttachmentDetail    `protobuf:"bytes,6,rep,name=attachment,proto3" json:"attachment,omitempty"`
	Reaction        []*RoomEventReactionDetail `protobuf:"bytes,7,rep,name=reaction,proto3" json:"reaction,omitempty"`
	Content         string                     `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	CreateTimestamp int64                      `protobuf:"varint,9,opt,name=createTimestamp,proto3" json:"createTimestamp,omitempty"`
	UpdateTimestamp int64                      `protobuf:"varint,10,opt,name=updateTimestamp,proto3" json:"updateTimestamp,omitempty"`
}

func (x *RoomEventMessageDetail) Reset() {
	*x = RoomEventMessageDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomEventMessageDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomEventMessageDetail) ProtoMessage() {}

func (x *RoomEventMessageDetail) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomEventMessageDetail.ProtoReflect.Descriptor instead.
func (*RoomEventMessageDetail) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{13}
}

func (x *RoomEventMessageDetail) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *RoomEventMessageDetail) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomEventMessageDetail) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *RoomEventMessageDetail) GetClientEventId() int32 {
	if x != nil && x.ClientEventId != nil {
		return *x.ClientEventId
	}
	return 0
}

func (x *RoomEventMessageDetail) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RoomEventMessageDetail) GetAttachment() []*ChatAttachmentDetail {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *RoomEventMessageDetail) GetReaction() []*RoomEventReactionDetail {
	if x != nil {
		return x.Reaction
	}
	return nil
}

func (x *RoomEventMessageDetail) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RoomEventMessageDetail) GetCreateTimestamp() int64 {
	if x != nil {
		return x.CreateTimestamp
	}
	return 0
}

func (x *RoomEventMessageDetail) GetUpdateTimestamp() int64 {
	if x != nil {
		return x.UpdateTimestamp
	}
	return 0
}

type RoomEventSystemDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId         string `protobuf:"bytes,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	RoomId          string `protobuf:"bytes,2,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Version         int32  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Content         string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	CreateTimestamp int64  `protobuf:"varint,5,opt,name=createTimestamp,proto3" json:"createTimestamp,omitempty"`
}

func (x *RoomEventSystemDetail) Reset() {
	*x = RoomEventSystemDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomEventSystemDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomEventSystemDetail) ProtoMessage() {}

func (x *RoomEventSystemDetail) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomEventSystemDetail.ProtoReflect.Descriptor instead.
func (*RoomEventSystemDetail) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{14}
}

func (x *RoomEventSystemDetail) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *RoomEventSystemDetail) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomEventSystemDetail) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RoomEventSystemDetail) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RoomEventSystemDetail) GetCreateTimestamp() int64 {
	if x != nil {
		return x.CreateTimestamp
	}
	return 0
}

type SyncRoomsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncRoomsResponse) Reset() {
	*x = SyncRoomsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRoomsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRoomsResponse) ProtoMessage() {}

func (x *SyncRoomsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRoomsResponse.ProtoReflect.Descriptor instead.
func (*SyncRoomsResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{15}
}

type RoomEventMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId        string   `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	ClientEventId int32    `protobuf:"varint,2,opt,name=clientEventId,proto3" json:"clientEventId,omitempty"`
	Attachment    []string `protobuf:"bytes,3,rep,name=attachment,proto3" json:"attachment,omitempty"`
	Content       string   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Version       int32    `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *RoomEventMessageRequest) Reset() {
	*x = RoomEventMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomEventMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomEventMessageRequest) ProtoMessage() {}

func (x *RoomEventMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomEventMessageRequest.ProtoReflect.Descriptor instead.
func (*RoomEventMessageRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{16}
}

func (x *RoomEventMessageRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomEventMessageRequest) GetClientEventId() int32 {
	if x != nil {
		return x.ClientEventId
	}
	return 0
}

func (x *RoomEventMessageRequest) GetAttachment() []string {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *RoomEventMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RoomEventMessageRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type RoomEventMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail *RoomEventMessageDetail `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *RoomEventMessageResponse) Reset() {
	*x = RoomEventMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomEventMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomEventMessageResponse) ProtoMessage() {}

func (x *RoomEventMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomEventMessageResponse.ProtoReflect.Descriptor instead.
func (*RoomEventMessageResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{17}
}

func (x *RoomEventMessageResponse) GetDetail() *RoomEventMessageDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type RoomEventReaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId        string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	MessageId     string `protobuf:"bytes,2,opt,name=messageId,proto3" json:"messageId,omitempty"`
	ClientEventId int32  `protobuf:"varint,3,opt,name=clientEventId,proto3" json:"clientEventId,omitempty"`
	Content       string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *RoomEventReaction) Reset() {
	*x = RoomEventReaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomEventReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomEventReaction) ProtoMessage() {}

func (x *RoomEventReaction) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomEventReaction.ProtoReflect.Descriptor instead.
func (*RoomEventReaction) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{18}
}

func (x *RoomEventReaction) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomEventReaction) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *RoomEventReaction) GetClientEventId() int32 {
	if x != nil {
		return x.ClientEventId
	}
	return 0
}

func (x *RoomEventReaction) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ListUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{19}
}

type ListUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*UserDetail `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{20}
}

func (x *ListUsersResponse) GetUsers() []*UserDetail {
	if x != nil {
		return x.Users
	}
	return nil
}

// Will produce RoomStateChangedReply
type RoomReadMarkerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId              string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	ReadMarkerTimestamp int64  `protobuf:"varint,2,opt,name=readMarkerTimestamp,proto3" json:"readMarkerTimestamp,omitempty"`
}

func (x *RoomReadMarkerRequest) Reset() {
	*x = RoomReadMarkerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomReadMarkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomReadMarkerRequest) ProtoMessage() {}

func (x *RoomReadMarkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomReadMarkerRequest.ProtoReflect.Descriptor instead.
func (*RoomReadMarkerRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{21}
}

func (x *RoomReadMarkerRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomReadMarkerRequest) GetReadMarkerTimestamp() int64 {
	if x != nil {
		return x.ReadMarkerTimestamp
	}
	return 0
}

type CreateRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Avatar    *string  `protobuf:"bytes,2,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
	MemberIds []string `protobuf:"bytes,3,rep,name=memberIds,proto3" json:"memberIds,omitempty"`
}

func (x *CreateRoomRequest) Reset() {
	*x = CreateRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomRequest) ProtoMessage() {}

func (x *CreateRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomRequest.ProtoReflect.Descriptor instead.
func (*CreateRoomRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{22}
}

func (x *CreateRoomRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateRoomRequest) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *CreateRoomRequest) GetMemberIds() []string {
	if x != nil {
		return x.MemberIds
	}
	return nil
}

type CreateRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail *RoomDetail `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *CreateRoomResponse) Reset() {
	*x = CreateRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomResponse) ProtoMessage() {}

func (x *CreateRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomResponse.ProtoReflect.Descriptor instead.
func (*CreateRoomResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{23}
}

func (x *CreateRoomResponse) GetDetail() *RoomDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

// Will produce RoomStateChangedResponse
type InviteRoomMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId    string   `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	MemberIds []string `protobuf:"bytes,2,rep,name=memberIds,proto3" json:"memberIds,omitempty"`
}

func (x *InviteRoomMember) Reset() {
	*x = InviteRoomMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteRoomMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteRoomMember) ProtoMessage() {}

func (x *InviteRoomMember) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteRoomMember.ProtoReflect.Descriptor instead.
func (*InviteRoomMember) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{24}
}

func (x *InviteRoomMember) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *InviteRoomMember) GetMemberIds() []string {
	if x != nil {
		return x.MemberIds
	}
	return nil
}

// Will produce RoomStateChangedResponse
type RemoveRoomMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId    string   `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	MemberIds []string `protobuf:"bytes,2,rep,name=memberIds,proto3" json:"memberIds,omitempty"`
}

func (x *RemoveRoomMember) Reset() {
	*x = RemoveRoomMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRoomMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRoomMember) ProtoMessage() {}

func (x *RemoveRoomMember) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRoomMember.ProtoReflect.Descriptor instead.
func (*RemoveRoomMember) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{25}
}

func (x *RemoveRoomMember) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RemoveRoomMember) GetMemberIds() []string {
	if x != nil {
		return x.MemberIds
	}
	return nil
}

type RoomStateChangedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail *RoomDetail `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *RoomStateChangedResponse) Reset() {
	*x = RoomStateChangedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomStateChangedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomStateChangedResponse) ProtoMessage() {}

func (x *RoomStateChangedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomStateChangedResponse.ProtoReflect.Descriptor instead.
func (*RoomStateChangedResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{26}
}

func (x *RoomStateChangedResponse) GetDetail() *RoomDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type RoomEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*RoomEventResponse_MessageEvent
	//	*RoomEventResponse_SystemEvent
	//	*RoomEventResponse_RoomStateChanged
	//	*RoomEventResponse_RoomEventMessage
	//	*RoomEventResponse_RoomEventReaction
	Payload isRoomEventResponse_Payload `protobuf_oneof:"payload"`
}

func (x *RoomEventResponse) Reset() {
	*x = RoomEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomEventResponse) ProtoMessage() {}

func (x *RoomEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomEventResponse.ProtoReflect.Descriptor instead.
func (*RoomEventResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{27}
}

func (m *RoomEventResponse) GetPayload() isRoomEventResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *RoomEventResponse) GetMessageEvent() *RoomEventMessageDetail {
	if x, ok := x.GetPayload().(*RoomEventResponse_MessageEvent); ok {
		return x.MessageEvent
	}
	return nil
}

func (x *RoomEventResponse) GetSystemEvent() *RoomEventSystemDetail {
	if x, ok := x.GetPayload().(*RoomEventResponse_SystemEvent); ok {
		return x.SystemEvent
	}
	return nil
}

func (x *RoomEventResponse) GetRoomStateChanged() *RoomStateChangedResponse {
	if x, ok := x.GetPayload().(*RoomEventResponse_RoomStateChanged); ok {
		return x.RoomStateChanged
	}
	return nil
}

func (x *RoomEventResponse) GetRoomEventMessage() *RoomEventMessageDetail {
	if x, ok := x.GetPayload().(*RoomEventResponse_RoomEventMessage); ok {
		return x.RoomEventMessage
	}
	return nil
}

func (x *RoomEventResponse) GetRoomEventReaction() *RoomEventReactionDetail {
	if x, ok := x.GetPayload().(*RoomEventResponse_RoomEventReaction); ok {
		return x.RoomEventReaction
	}
	return nil
}

type isRoomEventResponse_Payload interface {
	isRoomEventResponse_Payload()
}

type RoomEventResponse_MessageEvent struct {
	MessageEvent *RoomEventMessageDetail `protobuf:"bytes,1,opt,name=messageEvent,proto3,oneof"`
}

type RoomEventResponse_SystemEvent struct {
	SystemEvent *RoomEventSystemDetail `protobuf:"bytes,2,opt,name=systemEvent,proto3,oneof"`
}

type RoomEventResponse_RoomStateChanged struct {
	RoomStateChanged *RoomStateChangedResponse `protobuf:"bytes,3,opt,name=roomStateChanged,proto3,oneof"`
}

type RoomEventResponse_RoomEventMessage struct {
	RoomEventMessage *RoomEventMessageDetail `protobuf:"bytes,4,opt,name=roomEventMessage,proto3,oneof"`
}

type RoomEventResponse_RoomEventReaction struct {
	RoomEventReaction *RoomEventReactionDetail `protobuf:"bytes,5,opt,name=roomEventReaction,proto3,oneof"`
}

func (*RoomEventResponse_MessageEvent) isRoomEventResponse_Payload() {}

func (*RoomEventResponse_SystemEvent) isRoomEventResponse_Payload() {}

func (*RoomEventResponse_RoomStateChanged) isRoomEventResponse_Payload() {}

func (*RoomEventResponse_RoomEventMessage) isRoomEventResponse_Payload() {}

func (*RoomEventResponse_RoomEventReaction) isRoomEventResponse_Payload() {}

var File_contract_proto protoreflect.FileDescriptor

var file_contract_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x2a, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x22, 0x0e, 0x0a, 0x0c,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x43, 0x0a, 0x0f,
	0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x68, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0xfa, 0x01, 0x0a, 0x10,
	0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x39, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x25, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c,
	0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75,
	0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x48, 0x01, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x2c, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x73, 0x22, 0xb0, 0x02, 0x0a, 0x10, 0x52, 0x6f, 0x6f, 0x6d, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x64, 0x0a, 0x0c, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x40, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2b,
	0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x61, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x61, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x22, 0xac, 0x02, 0x0a, 0x0a, 0x52, 0x6f,
	0x6f, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x56, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68,
	0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b,
	0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x63, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x97, 0x01,
	0x0a, 0x0f, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x69, 0x6e, 0x63, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x5c, 0x0a, 0x09, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x72,
	0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x99, 0x02, 0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x63,
	0x52, 0x6f, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x62, 0x0a, 0x0b, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65,
	0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74,
	0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x5b, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x72, 0x75,
	0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e,
	0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x22, 0x6e, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x6f, 0x6f, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x72, 0x75,
	0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e,
	0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x6f, 0x6f,
	0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x22, 0x70, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x17, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xee, 0x03, 0x0a, 0x16, 0x52, 0x6f, 0x6f, 0x6d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x72, 0x75, 0x2e, 0x61,
	0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70,
	0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5f, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x72, 0x75, 0x2e, 0x61,
	0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70,
	0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x28, 0x0a, 0x0f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x15, 0x52, 0x6f, 0x6f,
	0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x17, 0x52, 0x6f, 0x6f, 0x6d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x76, 0x0a, 0x18, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5a, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x42, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x89, 0x01,
	0x0a, 0x11, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x61, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x22, 0x61, 0x0a, 0x15, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13,
	0x72, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x6f, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x22, 0x64, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x72, 0x75, 0x2e,
	0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73,
	0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x48, 0x0a, 0x10, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x22, 0x48, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x6a,
	0x0a, 0x18, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x72, 0x75, 0x2e,
	0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73,
	0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xca, 0x04, 0x0a, 0x11, 0x52,
	0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x68, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78,
	0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e,
	0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x65, 0x0a, 0x0b, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x41, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x72, 0x0a, 0x10, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x72, 0x75,
	0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e,
	0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x10, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x70, 0x0a, 0x10, 0x72, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x42, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x10, 0x72, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x73, 0x0a, 0x11, 0x72, 0x6f, 0x6f, 0x6d, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x43, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x11, 0x72, 0x6f, 0x6f, 0x6d, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2a, 0x47, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12,
	0x1f, 0x0a, 0x1b, 0x41, 0x75, 0x74, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x57, 0x72, 0x6f, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x64, 0x73, 0x10, 0x01,
	0x2a, 0xb5, 0x01, 0x0a, 0x14, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x6f, 0x6f,
	0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x6f,
	0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x6f,
	0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x6f, 0x6f, 0x6d,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x4b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x6f, 0x6f, 0x6d,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x10, 0x04, 0x2a, 0x58, 0x0a, 0x0d, 0x52, 0x6f, 0x6f, 0x6d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x72, 0x6f, 0x6f,
	0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6c, 0x6c, 0x10, 0x00, 0x12,
	0x18, 0x0a, 0x14, 0x72, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x72, 0x6f, 0x6f,
	0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x10, 0x02, 0x2a, 0x50, 0x0a, 0x12, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x73, 0x69, 0x6e, 0x63,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x65,
	0x77, 0x65, 0x73, 0x74, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x6c, 0x64, 0x65,
	0x73, 0x74, 0x10, 0x01, 0x32, 0xab, 0x0a, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x3b, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c,
	0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a,
	0x09, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x3c, 0x2e, 0x72, 0x75, 0x2e,
	0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73,
	0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x6d,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c,
	0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75,
	0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x09, 0x53, 0x79, 0x6e, 0x63,
	0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x3c, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73,
	0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69,
	0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e,
	0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x3c, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d,
	0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9c, 0x01,
	0x0a, 0x11, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x72, 0x12, 0x41, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e,
	0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78,
	0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e,
	0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8b, 0x01, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x3d, 0x2e, 0x72, 0x75,
	0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e,
	0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x72, 0x75, 0x2e,
	0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73,
	0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x10, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x38, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x72, 0x75, 0x2e, 0x61,
	0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70,
	0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x92, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x38, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68,
	0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b,
	0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44,
	0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9b, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6f, 0x6d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65,
	0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74,
	0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x72,
	0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xa2, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x0f, 0x52, 0x6f, 0x6f,
	0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x38, 0x2e, 0x72,
	0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e, 0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x72, 0x75, 0x2e, 0x61, 0x6c, 0x65, 0x78,
	0x73, 0x68, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x75, 0x74, 0x6e,
	0x69, 0x6b, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x0d, 0x5a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contract_proto_rawDescOnce sync.Once
	file_contract_proto_rawDescData = file_contract_proto_rawDesc
)

func file_contract_proto_rawDescGZIP() []byte {
	file_contract_proto_rawDescOnce.Do(func() {
		file_contract_proto_rawDescData = protoimpl.X.CompressGZIP(file_contract_proto_rawDescData)
	})
	return file_contract_proto_rawDescData
}

var file_contract_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_contract_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_contract_proto_goTypes = []interface{}{
	(AuthErrorType)(0),               // 0: ru.alexshniperson.sputnikn.api.contract.v1.AuthErrorType
	(RoomMemberStatusType)(0),        // 1: ru.alexshniperson.sputnikn.api.contract.v1.RoomMemberStatusType
	(RoomEventType)(0),               // 2: ru.alexshniperson.sputnikn.api.contract.v1.RoomEventType
	(SinceTimeOrderType)(0),          // 3: ru.alexshniperson.sputnikn.api.contract.v1.SinceTimeOrderType
	(*EmptyRequest)(nil),             // 4: ru.alexshniperson.sputnikn.api.contract.v1.EmptyRequest
	(*AuthUserRequest)(nil),          // 5: ru.alexshniperson.sputnikn.api.contract.v1.AuthUserRequest
	(*UserDetail)(nil),               // 6: ru.alexshniperson.sputnikn.api.contract.v1.UserDetail
	(*AuthUserResponse)(nil),         // 7: ru.alexshniperson.sputnikn.api.contract.v1.AuthUserResponse
	(*ListRoomsRequest)(nil),         // 8: ru.alexshniperson.sputnikn.api.contract.v1.ListRoomsRequest
	(*RoomMemberDetail)(nil),         // 9: ru.alexshniperson.sputnikn.api.contract.v1.RoomMemberDetail
	(*RoomDetail)(nil),               // 10: ru.alexshniperson.sputnikn.api.contract.v1.RoomDetail
	(*ListRoomsResponse)(nil),        // 11: ru.alexshniperson.sputnikn.api.contract.v1.ListRoomsResponse
	(*SinceTimeFilter)(nil),          // 12: ru.alexshniperson.sputnikn.api.contract.v1.SinceTimeFilter
	(*SyncRoomFilter)(nil),           // 13: ru.alexshniperson.sputnikn.api.contract.v1.SyncRoomFilter
	(*SyncRoomsRequest)(nil),         // 14: ru.alexshniperson.sputnikn.api.contract.v1.SyncRoomsRequest
	(*ChatAttachmentDetail)(nil),     // 15: ru.alexshniperson.sputnikn.api.contract.v1.ChatAttachmentDetail
	(*RoomEventReactionDetail)(nil),  // 16: ru.alexshniperson.sputnikn.api.contract.v1.RoomEventReactionDetail
	(*RoomEventMessageDetail)(nil),   // 17: ru.alexshniperson.sputnikn.api.contract.v1.RoomEventMessageDetail
	(*RoomEventSystemDetail)(nil),    // 18: ru.alexshniperson.sputnikn.api.contract.v1.RoomEventSystemDetail
	(*SyncRoomsResponse)(nil),        // 19: ru.alexshniperson.sputnikn.api.contract.v1.SyncRoomsResponse
	(*RoomEventMessageRequest)(nil),  // 20: ru.alexshniperson.sputnikn.api.contract.v1.RoomEventMessageRequest
	(*RoomEventMessageResponse)(nil), // 21: ru.alexshniperson.sputnikn.api.contract.v1.RoomEventMessageResponse
	(*RoomEventReaction)(nil),        // 22: ru.alexshniperson.sputnikn.api.contract.v1.RoomEventReaction
	(*ListUsersRequest)(nil),         // 23: ru.alexshniperson.sputnikn.api.contract.v1.ListUsersRequest
	(*ListUsersResponse)(nil),        // 24: ru.alexshniperson.sputnikn.api.contract.v1.ListUsersResponse
	(*RoomReadMarkerRequest)(nil),    // 25: ru.alexshniperson.sputnikn.api.contract.v1.RoomReadMarkerRequest
	(*CreateRoomRequest)(nil),        // 26: ru.alexshniperson.sputnikn.api.contract.v1.CreateRoomRequest
	(*CreateRoomResponse)(nil),       // 27: ru.alexshniperson.sputnikn.api.contract.v1.CreateRoomResponse
	(*InviteRoomMember)(nil),         // 28: ru.alexshniperson.sputnikn.api.contract.v1.InviteRoomMember
	(*RemoveRoomMember)(nil),         // 29: ru.alexshniperson.sputnikn.api.contract.v1.RemoveRoomMember
	(*RoomStateChangedResponse)(nil), // 30: ru.alexshniperson.sputnikn.api.contract.v1.RoomStateChangedResponse
	(*RoomEventResponse)(nil),        // 31: ru.alexshniperson.sputnikn.api.contract.v1.RoomEventResponse
}
var file_contract_proto_depIdxs = []int32{
	0,  // 0: ru.alexshniperson.sputnikn.api.contract.v1.AuthUserResponse.error:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.AuthErrorType
	6,  // 1: ru.alexshniperson.sputnikn.api.contract.v1.AuthUserResponse.detail:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.UserDetail
	1,  // 2: ru.alexshniperson.sputnikn.api.contract.v1.RoomMemberDetail.memberStatus:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.RoomMemberStatusType
	9,  // 3: ru.alexshniperson.sputnikn.api.contract.v1.RoomDetail.members:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.RoomMemberDetail
	10, // 4: ru.alexshniperson.sputnikn.api.contract.v1.ListRoomsResponse.detail:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.RoomDetail
	3,  // 5: ru.alexshniperson.sputnikn.api.contract.v1.SinceTimeFilter.orderType:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.SinceTimeOrderType
	12, // 6: ru.alexshniperson.sputnikn.api.contract.v1.SyncRoomFilter.sinceFilter:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.SinceTimeFilter
	2,  // 7: ru.alexshniperson.sputnikn.api.contract.v1.SyncRoomFilter.eventFilter:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.RoomEventType
	13, // 8: ru.alexshniperson.sputnikn.api.contract.v1.SyncRoomsRequest.roomFilter:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.SyncRoomFilter
	15, // 9: ru.alexshniperson.sputnikn.api.contract.v1.RoomEventMessageDetail.attachment:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.ChatAttachmentDetail
	16, // 10: ru.alexshniperson.sputnikn.api.contract.v1.RoomEventMessageDetail.reaction:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.RoomEventReactionDetail
	17, // 11: ru.alexshniperson.sputnikn.api.contract.v1.RoomEventMessageResponse.detail:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.RoomEventMessageDetail
	6,  // 12: ru.alexshniperson.sputnikn.api.contract.v1.ListUsersResponse.users:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.UserDetail
	10, // 13: ru.alexshniperson.sputnikn.api.contract.v1.CreateRoomResponse.detail:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.RoomDetail
	10, // 14: ru.alexshniperson.sputnikn.api.contract.v1.RoomStateChangedResponse.detail:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.RoomDetail
	17, // 15: ru.alexshniperson.sputnikn.api.contract.v1.RoomEventResponse.messageEvent:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.RoomEventMessageDetail
	18, // 16: ru.alexshniperson.sputnikn.api.contract.v1.RoomEventResponse.systemEvent:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.RoomEventSystemDetail
	30, // 17: ru.alexshniperson.sputnikn.api.contract.v1.RoomEventResponse.roomStateChanged:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.RoomStateChangedResponse
	17, // 18: ru.alexshniperson.sputnikn.api.contract.v1.RoomEventResponse.roomEventMessage:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.RoomEventMessageDetail
	16, // 19: ru.alexshniperson.sputnikn.api.contract.v1.RoomEventResponse.roomEventReaction:type_name -> ru.alexshniperson.sputnikn.api.contract.v1.RoomEventReactionDetail
	5,  // 20: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.AuthUser:input_type -> ru.alexshniperson.sputnikn.api.contract.v1.AuthUserRequest
	8,  // 21: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.ListRooms:input_type -> ru.alexshniperson.sputnikn.api.contract.v1.ListRoomsRequest
	14, // 22: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.SyncRooms:input_type -> ru.alexshniperson.sputnikn.api.contract.v1.SyncRoomsRequest
	23, // 23: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.ListUsers:input_type -> ru.alexshniperson.sputnikn.api.contract.v1.ListUsersRequest
	25, // 24: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.SetRoomReadMarker:input_type -> ru.alexshniperson.sputnikn.api.contract.v1.RoomReadMarkerRequest
	26, // 25: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.CreateRoom:input_type -> ru.alexshniperson.sputnikn.api.contract.v1.CreateRoomRequest
	4,  // 26: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.InviteRoomMember:input_type -> ru.alexshniperson.sputnikn.api.contract.v1.EmptyRequest
	4,  // 27: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.RemoveRoomMember:input_type -> ru.alexshniperson.sputnikn.api.contract.v1.EmptyRequest
	20, // 28: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.AddRoomMessage:input_type -> ru.alexshniperson.sputnikn.api.contract.v1.RoomEventMessageRequest
	4,  // 29: ru.alexshniperson.sputnikn.api.contract.v1.ChatStreamService.RoomEventStream:input_type -> ru.alexshniperson.sputnikn.api.contract.v1.EmptyRequest
	7,  // 30: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.AuthUser:output_type -> ru.alexshniperson.sputnikn.api.contract.v1.AuthUserResponse
	11, // 31: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.ListRooms:output_type -> ru.alexshniperson.sputnikn.api.contract.v1.ListRoomsResponse
	19, // 32: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.SyncRooms:output_type -> ru.alexshniperson.sputnikn.api.contract.v1.SyncRoomsResponse
	24, // 33: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.ListUsers:output_type -> ru.alexshniperson.sputnikn.api.contract.v1.ListUsersResponse
	30, // 34: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.SetRoomReadMarker:output_type -> ru.alexshniperson.sputnikn.api.contract.v1.RoomStateChangedResponse
	27, // 35: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.CreateRoom:output_type -> ru.alexshniperson.sputnikn.api.contract.v1.CreateRoomResponse
	30, // 36: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.InviteRoomMember:output_type -> ru.alexshniperson.sputnikn.api.contract.v1.RoomStateChangedResponse
	30, // 37: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.RemoveRoomMember:output_type -> ru.alexshniperson.sputnikn.api.contract.v1.RoomStateChangedResponse
	21, // 38: ru.alexshniperson.sputnikn.api.contract.v1.ChatService.AddRoomMessage:output_type -> ru.alexshniperson.sputnikn.api.contract.v1.RoomEventMessageResponse
	31, // 39: ru.alexshniperson.sputnikn.api.contract.v1.ChatStreamService.RoomEventStream:output_type -> ru.alexshniperson.sputnikn.api.contract.v1.RoomEventResponse
	30, // [30:40] is the sub-list for method output_type
	20, // [20:30] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_contract_proto_init() }
func file_contract_proto_init() {
	if File_contract_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contract_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoomsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomMemberDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoomsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SinceTimeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRoomFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRoomsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatAttachmentDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomEventReactionDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomEventMessageDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomEventSystemDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRoomsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomEventMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomEventMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomEventReaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomReadMarkerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteRoomMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRoomMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomStateChangedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_contract_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_contract_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_contract_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_contract_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_contract_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_contract_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_contract_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_contract_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*RoomEventResponse_MessageEvent)(nil),
		(*RoomEventResponse_SystemEvent)(nil),
		(*RoomEventResponse_RoomStateChanged)(nil),
		(*RoomEventResponse_RoomEventMessage)(nil),
		(*RoomEventResponse_RoomEventReaction)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contract_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_contract_proto_goTypes,
		DependencyIndexes: file_contract_proto_depIdxs,
		EnumInfos:         file_contract_proto_enumTypes,
		MessageInfos:      file_contract_proto_msgTypes,
	}.Build()
	File_contract_proto = out.File
	file_contract_proto_rawDesc = nil
	file_contract_proto_goTypes = nil
	file_contract_proto_depIdxs = nil
}
